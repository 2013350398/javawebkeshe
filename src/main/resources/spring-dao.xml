<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
    创建spring整个Dao层的配置文件spring-zc.dao.xml，主要整合数据库连接文件，连接池信息，
    sqlsessionFactory(需绑定Mybatis配置文件去读取配置Mapper信息)，
    dao层动态注入到Spring中
    -->
    <context:component-scan base-package="com.zc.service"/>
    <context:component-scan base-package="com.zc.dao"/>
    <!--1,关联数据库连接文件-->
    <context:property-placeholder location="classpath:database.properties"/>
    <!--2,连接池 alibaba-->
    <!--读取外部配置-->
    <context:property-placeholder location="classpath:database.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>
    <!-- 3,配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.zc.pojo"></property>
    </bean>
    <!-- 4,配置dao层，动态实现了接口可以注入到Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.zc.dao"/>
    </bean>
</beans>
